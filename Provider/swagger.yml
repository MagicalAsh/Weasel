swagger: "2.0"
info:
  description: "Weasel is a basic code search tool, created as a Western Carolina University Capstone Project by Wesley Rogers. Weasel is build in Java using the Spring framework, and uses Elasticsearch as a database. Using these, Weasel is able to search for structural components of code, such as \"classes extending java.lang.Exception with a field called parent.\" This allows for more complicated searches through code, which can uncover bugs in the searched application.\n\nThe Weasel Provider service allows for a user to request that a repository of code be provided to the Index service to be parsed and then inserted into the database.\n\nA note to users: it's probable that this service can be ignored. At some point in the future, a python script will pop up that's capable of providing code. This script should consume much less data."
  version: "1.0.0"
  title: "Weasel Provider Service"
  # termsOfService: "http://swagger.io/terms/"
  contact:
    email: "wsrogers3@catamount.wcu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/provider"
tags:
  - name: "Web Refresh"
    description: "Refreshing a repository via REST"
schemes:
  - "https"
  - "http"
paths:
  /refresh:
    post:
      tags:
        - "Web Refresh"
      summary: "Refresh a repo"
      description: ""
      operationId: "refresh"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "An object describing the repository to refresh"
          required: true
          schema:
            $ref: '#/definitions/Repository'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RefreshResponse"

  /refresh/{repoName}:
    get:
      tags:
        - "Web Refresh"
      summary: "Refresh a repo by name."
      description: "Refreshes a repository using a short name."
      operationId: "refreshByName"
      produces:
        - "application/json"
      parameters:
        - name: "repoName"
          in: "path"
          description: "repo name to refresh"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RefreshResponse"

  /pull:
    post:
      tags:
        - "Web Pull"
      summary: "Pulls the indexed responses from a repo"
      description: ""
      operationId: "pull"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "An object describing the repository to refresh"
          required: true
          schema:
            $ref: '#/definitions/Repository'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PullResponse"
  /pull/{repoName}:
    get:
      tags:
        - "Web Pull"
      summary: "Pulls a repositories parsed results"
      description: "Refreshes a repository using a short name."
      operationId: "pullByName"
      produces:
        - "application/json"
      parameters:
        - name: "repoName"
          in: "path"
          description: "repo name to refresh"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PullResponse"

definitions:
  Repository:
    properties:
      repo:
        type: string

  Metadata:
    properties:
      path:
        type: string
      status:
        type: integer
      status_type:
        type: string
      timestamp:
        type: string

  RefreshResponse:
    properties:
      metadata:
        $ref: '#/definitions/Metadata'
      provided_by:
        type: array
        items:
          type: string


  PullResponse:
    properties:
      files:
        type: array
        items:
          $ref: '#/definitions/ProvidedRepository'
      metadata:
        $ref: '#/definitions/Metadata'
      provided_by:
        type: array
        items:
          type: string

  ProvidedRepository:
    type: object
    properties:
      provided_by:
        type: string
      source:
        type: array
        items:
          type: object
          properties:
            accessed:
              type: string
            branch_name:
              type: string
            commit_id:
              type: string
            content_location:
              type: string
            file_contents:
              type: array
              items:
                type: string
            line_count:
              type: integer
            obtained_by:
              type: string